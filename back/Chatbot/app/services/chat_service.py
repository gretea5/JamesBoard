# app/services/chat_service.py
from typing import Dict, Any, List, Optional, Tuple
import logging
from app.core.kblam_manager import SimplifiedKBLaM
from app.core.llm_client import LLMClient
from app.utils.prompt_templates import get_q_system_prompt, get_recommendation_prompt, get_comparison_prompt
from app.utils.text_classifier import is_game_related_query
from app.models.knowledge import KnowledgeTriple

# 로거 설정
logger = logging.getLogger(__name__)

class ChatService:
    """KBLaM 기반 응답을 위한 채팅 상호작용 처리 서비스"""
    
    _instance = None
    
    # 보드게임 ID 리스트 - 실제 데이터로 업데이트됨
    GAME_IDS = [
        1, 3, 5, 11, 12, 13, 18, 41, 42, 45, 46, 47, 50, 51, 54, 71, 74, 88, 93, 118,
        150, 171, 172, 173, 181, 215, 220, 327, 372, 421, 432, 438, 463, 475, 478, 483, 503, 521, 552,
        555, 699, 760, 811, 822, 904, 925, 929, 1041, 1111, 1198, 1219, 1353, 1406, 1465, 1501, 1502, 1917,
        1927, 2083, 2093, 2243, 2281, 2346, 2375, 2386, 2389, 2392, 2398, 2452, 2453, 2511, 2651, 2653, 2655,
        2719, 2921, 2944, 2955, 3076, 3201, 3955, 4098, 4143, 4390, 5404, 5782, 5894, 6249, 6472, 7717,
        7854, 8098, 8125, 8217, 8946, 9209, 9216, 9217, 9220, 9609, 9674, 10093, 10453, 10506, 10547, 10630,
        11170, 12002, 12333, 12493, 12942, 12962, 13004, 13122, 13654, 14105, 14996, 15062, 15363, 15364, 15512,
        15987, 16747, 17133, 17226, 17329, 17530, 18602, 18803, 19777, 19857, 20100, 20437, 20551, 20963, 21050,
        21241, 21348, 21763, 21790, 21882, 22345, 22545, 22827, 24068, 24181, 24480, 24508, 25021, 25292, 25417,
        25554, 25613, 26990, 27162, 27173, 27708, 27746, 27833, 28023, 28143, 28720, 29223, 29368, 30380, 30549,
        30645, 30869, 30957, 31260, 31481, 31594, 31627, 31730, 33160, 34119, 34219, 34635, 35677, 36218, 36932,
        37046, 37111, 37380, 37904, 38453, 39351, 39463, 39683, 39856, 39938, 40628, 40692, 40765, 40834, 41002,
        41114, 42052, 42215, 43015, 43111, 43528, 43570, 45315, 46213, 47185, 48726, 50750, 53953, 54043, 54138,
        54625, 54998, 55600, 55670, 55690, 56692, 58281, 58421, 59294, 59959, 62219, 63268, 63628, 63888, 65244,
        65532, 65781, 66188, 66362, 66589, 68425, 68448, 69789, 70149, 70323, 70512, 70919, 71721, 72125, 72321,
        73439, 73761, 77034, 77130, 77423, 79828, 82222, 83195, 83330, 84876, 87890, 90137, 90419, 91312, 91514,
        92415, 92828, 93260, 95527, 96848, 96913, 97207, 97786, 97842, 98778, 100423, 100901, 101721, 102652, 102680,
        102794, 103343, 103885, 103886, 104006, 104162, 105134, 105551, 107529, 108745, 109276, 110277, 110327, 111341, 113294,
        113924, 115746, 117959, 118048, 119432, 119506, 119788, 119890, 120677, 121408, 121921, 122298, 122515, 123260, 123540,
        123570, 124361, 124708, 124742, 125153, 125618, 126042, 126163, 126792, 127023, 127060, 127398, 128271, 128621, 128671,
        128882, 129437, 130592, 131260, 131287, 131357, 131835, 132531, 133038, 133473, 133848, 134726, 135779, 136063, 136888,
        137269, 137408, 138161, 139976, 140603, 140620, 140934, 141572, 142379, 143515, 143519, 143693, 143741, 144344, 144592,
        144733, 144797, 145659, 146021, 146278, 146439, 146508, 146652, 146886, 147020, 147151, 147949, 148228, 148949, 150145,
        150376, 150485, 150658, 151022, 151347, 153938, 154203, 154458, 154809, 155068, 155362, 155426, 155624, 155703, 155821,
        155987, 156009, 156129, 156336, 156546, 156566, 156858, 157354, 157969, 158600, 158899, 159508, 159675, 160477, 160499,
        161417, 161533, 161614, 161936, 161970, 162007, 162082, 162886, 163068, 163166, 163412, 163602, 163967, 163968, 164153,
        164928, 165722, 166384, 166669, 167355, 167400, 167791, 168435, 168584, 169426, 169654, 169786, 170042, 170216, 170416,
        170561, 170624, 171131, 171273, 171499, 171623, 171668, 172081, 172225, 172287, 172308, 172386, 172818, 173346, 174430,
        175117, 175155, 175640, 175914, 176165, 176189, 176396, 176494, 176558, 176734, 176920, 177478, 177590, 177639, 177736,
        178900, 179172, 179275, 180263, 180511, 180593, 180974, 181279, 181304, 181530, 181687, 182028, 182134, 182631, 182874,
        183251, 183394, 183840, 184267, 184921, 185343, 187617, 187645, 188834, 188866, 188920, 189932, 191051, 191189, 191862,
        192135, 192153, 192291, 192457, 192458, 192836, 193037, 193042, 193558, 193738, 194594, 194607, 194626, 194655, 194879,
        195421, 195539, 196326, 196340, 197376, 197443, 198740, 198773, 198928, 198994, 199042, 199478, 199561, 199792, 200147,
        200680, 201808, 201825, 202426, 203416, 203417, 203420, 203993, 204305, 204472, 204583, 205059, 205359, 205637, 205896,
        206051, 206718, 206941, 207764, 209010, 209418, 209685, 209778, 213893, 215311, 216132, 216459, 216600, 216734, 217372,
        218121, 218333, 218417, 218603, 219215, 219513, 220308, 220520, 220877, 221107, 221194, 221965, 222509, 223040, 223321,
        223770, 224037, 224517, 224783, 225694, 225981, 226320, 226522, 227224, 227789, 227935, 228341, 229220, 229853, 230244,
        230802, 231581, 231733, 232043, 232219, 232405, 232414, 232832, 233078, 233247, 233312, 233371, 233398, 233867, 234277,
        234487, 235488, 236191, 236457, 237182, 239188, 239464, 240980, 241451, 241724, 242302, 242574, 242639, 244115, 244228,
        244331, 244521, 244522, 244711, 245638, 245643, 245654, 245655, 245934, 246192, 246684, 246784, 246900, 247367, 247763,
        248490, 249259, 250458, 251247, 251658, 251678, 253344, 254386, 254640, 255984, 256226, 256382, 256730, 256916, 256952,
        256960, 257499, 257501, 258036, 258210, 258779, 260180, 260428, 260605, 262215, 262543, 262712, 263918, 264055, 264220,
        264241, 265188, 265402, 265736, 266192, 266507, 266524, 266810, 266830, 268864, 269144, 269207, 269210, 269385, 269511,
        270673, 270844, 270970, 271055, 271324, 271896, 274364, 274637, 274960, 275467, 276025, 276498, 277085, 277659, 279537,
        281259, 282524, 283155, 283355, 283393, 283864, 283948, 284083, 284378, 284435, 284653, 284742, 285192, 285774, 285967,
        286096, 287954, 290236, 291453, 291457, 291572, 293014, 294484, 295374, 295486, 295770, 295895, 295947, 296151, 296912,
        297030, 297129, 297562, 298047, 298069, 299169, 300322, 300531, 300877, 301880, 302723, 303057, 304051, 304420, 304783,
        305096, 306040, 306735, 307002, 308765, 310100, 310873, 311193, 312484, 314040, 314491, 314503, 316377, 316554, 317985,
        318084, 318184, 318977, 319966, 321608, 322289, 323612, 324856, 328479, 328565, 328871, 329082, 329465, 329839, 331106,
        332772, 334065, 336794, 336986, 339789, 340466, 341169, 342942, 343905, 345584, 345972, 346501, 346703, 346965, 350184,
        350316, 350933, 351040, 351913, 352515, 353288, 353545, 355093, 356033, 356123, 357563, 359871, 359970, 364073, 365258,
        365717, 366013, 366161, 367220, 369880, 370591, 371942, 373106, 374173, 379078, 379629, 380607, 383179, 385529, 385761,
        391163, 396790, 397598, 400314, 410201, 414317, 421006
    ]

    # 게임명과 ID 매핑 딕셔너리 - 실제 데이터로 업데이트됨
    GAME_NAME_TO_ID = {
        "디 마허": 1,
        "사무라이": 3,
        "어콰이어": 5,
        "보난자": 11,
        "라": 12,
        "카탄": 13,
        "로보랠리": 18,
        "멈출 수 없어": 41,
        "티그리스 & 유프라테스": 42,
        "페루도": 45,
        "메디치": 46,
        "차이나타운": 47,
        "로스트 시티": 50,
        "리코쳇 로봇": 51,
        "티칼": 54,
        "문명": 71,
        "애플 투 애플": 74,
        "토레스": 88,
        "엘 그란데": 93,
        "모던 아트": 118,
        "피치카": 150,
        "체스": 171,
        "포 세일": 172,
        "포뮬러 D챕": 173, # 원문 '포뮬러 D챕' 그대로 사용
        "리스크": 181,
        "티츄": 215,
        "하이 소사이어티": 220,
        "루핑 루이": 327,
        "쇼텐 토텐": 372,
        "1830: 철도 및 강도 남작": 421,
        "테이크 5": 432,
        "스코틀랜드 야드": 438,
        "매직: 더 개더링": 463,
        "타지마할": 475,
        "시타델": 478,
        "외교": 483,
        "사막을 지나서": 503,
        "크로키놀": 521,
        "버스": 552,
        "플로렌스의 군주": 555,
        "히어로퀘스트": 699,
        "배틀 라인": 760,
        "루미큐브": 811,
        "카르카손": 822,
        "나이트메어 프로덕션": 904,
        "웨어울프": 925,
        "더 그레이트 달무티": 929,
        "산 마르코": 1041,
        "타부": 1111,
        "세트": 1198,
        "라비린스": 1219,
        "타임즈 업!": 1353,
        "모노폴리": 1406,
        "위저드": 1465,
        "마스터피스": 1501,
        "호텔": 1502,
        "스트라테고": 1917,
        "먼치킨": 1927,
        "체커": 2083,
        "마작": 2093,
        "야찌": 2243,
        "픽셔너리": 2281,
        "드본": 2346,
        "시퀀스": 2375,
        "차이니즈 체커": 2386,
        "오델로": 2389,
        "마스터마인드": 2392,
        "크리비지": 2398,
        "젠가": 2452,
        "블로커스": 2453,
        "셜록 홈즈 컨설팅 탐정: 템스 강 살인 사건 & 기타 사건": 2511,
        "파워 그리드": 2651,
        "서바이브: 아틀란티스 탈출!": 2653,
        "하이브": 2655,
        "커넥트 포": 2719,
        "인생 게임": 2921,
        "할리 갈리": 2944,
        "멕시카": 2955,
        "푸에르토 리코": 3076,
        "반지의 제왕: 대결": 3201,
        "BANG!": 3955,
        "스팀 에이지": 4098,
        "게스 후?": 4143,
        "카르카손: 사냥꾼과 채집꾼": 4390,
        "아문-레": 5404,
        "콜로레토": 5782,
        "트위스터": 5894,
        "알함브라": 6249,
        "왕좌의 게임": 6472,
        "카르카손: 성": 7717,
        "인쉬": 7854,
        "정글 스피드": 8098,
        "산티아고": 8125,
        "산 후안": 8217,
        "다빈치 코드": 8946,
        "티켓 투 라이드": 9209,
        "고아: 새로운 탐험": 9216,
        "상트페테르부르크": 9217,
        "사보타지": 9220,
        "반지의 전쟁": 9609,
        "이니지어스": 9674,
        "액시스 & 얼라이즈": 10093,
        "악어 치과 의사": 10453,
        "부루 마블": 10506,
        "힐 하우스의 배신": 10547,
        "메모아 '44": 10630,
        "히어로스케이프 마스터 세트: 발키리의 부상": 11170,
        "잠보": 12002,
        "황혼의 투쟁": 12333,
        "황혼 제국: 제3판": 12493,
        "노땡스!": 12942,
        "리프 인카운터": 12962,
        "폼페이의 몰락": 13004,
        "앤티쿼티": 13122,
        "윷놀이": 13654,
        "커맨드 앤 컬러: 에인션트": 14105,
        "티켓 투 라이드: 유럽": 14996,
        "카멜롯의 그림자": 15062,
        "넥서스 옵스": 15363,
        "베가스 쇼다운": 15364,
        "잉카 골드": 15512,
        "아컴 호러": 15987,
        "텀블린 다이스": 16747,
        "레일웨이 오브 더 월드": 17133,
        "디센트: 어둠 속으로의 여정": 17226,
        "동물 탑 쌓기": 17329,
        "고스톱": 17530,
        "카일러스": 18602,
        "블랙 스토리": 18803,
        "인도네시아": 19777,
        "로마의 영광": 19857,
        "위츠 앤 웨저스": 20100,
        "라스베가스의 군주들": 20437,
        "쇼군": 20551,
        "드라큘라의 분노 (2판)": 20963,
        "컴뱃 커맨더: 유럽": 21050,
        "뉴로시마 헥스": 21241,
        "티켓 투 라이드: 메르클린": 21348,
        "미스터 잭": 21763,
        "턴 앤 택시": 21790,
        "블루 문 시티": 21882,
        "이스파한": 22345,
        "에이지 오브 엠파이어 III: 디 에이지 오브 디스커버리": 22545,
        "스타크래프트: 보드 게임": 22827,
        "섀도우 헌터스": 24068,
        "임페리얼": 24181,
        "대지의 기둥": 24480,
        "탈루바": 24508,
        "세키가하라: 일본 통일": 25021,
        "머천트 앤 마로더": 25292,
        "배틀로어": 25417,
        "노트르담": 25554,
        "쓰루 디 에이지스": 25613,
        "컨테이너": 26990,
        "킹스버그": 27162,
        "바이킹": 27173,
        "1960: 대통령 만들기": 27708,
        "콜로세움": 27746,
        "스팀": 27833,
        "자메이카": 28023,
        "레이스 포 더 갤럭시": 28143,
        "브라스: 랭커셔": 28720,
        "마라케시": 29223,
        "지구 최후의 밤: 좀비 게임": 29368,
        "쿠바": 30380,
        "팬데믹": 30549,
        "태머니 홀": 30645,
        "테베": 30869,
        "트리뷴: 퍼스트 어몽 이퀄": 30957,
        "아그리콜라": 31260,
        "갤럭시 트러커": 31481,
        "진년(In the Year of the Dragon)": 31594,
        "티켓 투 라이드: 북유럽 국가": 31627,
        "와바시 캐논볼": 31730,
        "인데버": 33160,
        "아라비안 나이트": 34119,
        "비블리오스": 34219,
        "스톤 에이지": 34635,
        "르 아브르": 35677,
        "도미니언": 36218,
        "클라우스트로포비아": 36932,
        "고스트 스토리": 37046,
        "배틀스타 갤럭티카: 보드 게임": 37111,
        "롤 스루 디 에이지스: 청동기 시대": 37380,
        "포뮬러 D": 37904,
        "스페이스 얼럿": 38453,
        "오토모빌": 39351,
        "코스믹 인카운터": 39463,
        "뤄양의 문에서": 39683,
        "딕싯": 39856,
        "카슨 시티": 39938,
        "핀카": 40628,
        "스몰 월드": 40692,
        "문명의 충돌": 40765,
        "도미니언: 인트리그": 40834,
        "바스코 다 가마": 41002,
        "레지스탕스": 41114,
        "비뉴스": 42052,
        "토바고": 42215,
        "한자 토이토니카": 43015,
        "올드 월드의 혼돈": 43111,
        "세상 끝까지": 43528,
        "프라이데이": 43570,
        "던전 로드": 45315,
        "텔레스트레이션": 46213,
        "워해머: 침략": 47185,
        "에일리언 프론티어": 48726,
        "벨포트": 50750,
        "썬더스톤": 53953,
        "자이푸르": 54043,
        "임페리얼 2030": 54138,
        "스페이스 헐크 (3판)": 54625,
        "키클라데스": 54998,
        "조선소": 55600,
        "마카오": 55670,
        "킹덤 데스: 몬스터": 55690,
        "퍼레이드": 56692,
        "서머너 워즈": 58281,
        "에기지아": 58421,
        "룬워즈": 59294,
        "화이트채플에서 온 편지": 59959,
        "도미넌트 스피시즈": 62219,
        "스팟 잇!": 63268,
        "맨해튼 프로젝트": 63628,
        "이노베이션": 63888,
        "금지된 섬": 65244,
        "왕국 수호자": 65532,
        "런던": 65781,
        "프레스코": 66188,
        "글렌 모어": 66362,
        "나베가도르": 66589,
        "이민트 도메인": 68425,
        "7 원더스": 68448,
        "어센션: 덱빌딩 게임": 69789,
        "오라 에트 라보라": 70149,
        "킹 오브 도쿄": 70323,
        "루나": 70512,
        "타케노코": 70919,
        "스페이스 헐크: 데스 엔젤 - 카드 게임": 71721,
        "이클립스: 은하의 새로운 여명": 72125,
        "더 네트워크": 72321,
        "트로예스": 73439,
        "K2": 73761,
        "고양이와 초콜릿": 77034,
        "시드 마이어의 문명: 보드 게임": 77130,
        "반지의 제왕: 카드 게임": 77423,
        "눈이 덮인 몇 에이커": 79828,
        "시아: 표류 시스템의 전설": 82222,
        "고스트 블리츠": 83195,
        "매드니스 저택": 83330,
        "부르고뉴의 성": 84876,
        "프레타 포르테": 87890,
        "블러드 볼: 팀 매니저 ?? 카드 게임": 90137, # 원문 '??' 그대로 사용
        "에어라인 유럽": 90419,
        "디스크월드: 앙크-모포크": 91312,
        "라이노 히어로": 91514,
        "스컬": 92415,
        "딕싯: 오디세이": 92828,
        "서머너 워즈: 마스터 세트": 93260,
        "마데이라": 95527,
        "메이지 나이트": 96848,
        "랭카스터": 96913,
        "던전 페츠": 97207,
        "스몰 월드 언더그라운드": 97786,
        "마지막 유언": 97842,
        "하나비": 98778,
        "엘더 사인": 100423,
        "플래시 포인트: 소방 구조대": 100901,
        "메이지 워즈 아레나": 101721,
        "센티넬 오브 더 멀티버스": 102652,
        "트라야누스": 102680,
        "카베르나: 동굴 속 농부들": 102794,
        "왕좌의 게임: 보드 게임 (2판)": 103343,
        "스타워즈: 엑스윙 미니어처 게임": 103885,
        "스타워즈: 카드 게임": 103886,
        "빌리지": 104006,
        "디센트: 어둠 속의 여정 (2판)": 104162,
        "리스크 레거시": 105134,
        "아키펠라고": 105551,
        "킹덤 빌더": 107529,
        "시즌": 108745,
        "칸반: 드라이버 에디션": 109276,
        "별들 사이에서": 110277,
        "워터딥의 군주들": 110327,
        "더 그레이트 짐바브웨": 111341,
        "이스케이프: 사원의 저주": 113294,
        "좀비사이드": 113924,
        "반지 전쟁 (2판)": 115746,
        "라스베이거스": 117959,
        "타르기": 118048,
        "스노도니아": 119432,
        "자유: 지하 철도": 119506,
        "히페르보레아": 119788,
        "아그리콜라: 작은 생물과 큰 생물": 119890,
        "테라 미스티카": 120677,
        "트레인": 121408,
        "로빈슨 크루소: 저주받은 섬에서의 모험": 121921,
        "모렐": 122298,
        "키플라워": 122515,
        "서버비아": 123260,
        "도카이도": 123540,
        "스트라이크": 123570,
        "콩코르디아": 124361,
        "마이스 앤 미스틱스": 124708,
        "안드로이드: 넷러너": 124742,
        "갤러리스": 125153,
        "리베르탈리아": 125618,
        "네이션스": 126042,
        "촐킨: 마야 달력": 126163,
        "미르메스": 126792,
        "케메트": 127023,
        "보라보라": 127060,
        "안도르의 전설": 127398,
        "은행코폴리스": 128271,
        "비티컬쳐": 128621,
        "스파르타쿠스: 피와 배신의 게임": 128671,
        "레지스탕스: 아발론": 128882,
        "레전더리: 마블 덱 빌딩 게임": 129437,
        "클루": 130592,
        "퀵스": 131260,
        "파나막스": 131287,
        "쿠": 131357,
        "보스 몬스터: 던전 건설 카드 게임": 131835,
        "롤 포 더 갤럭시": 132531,
        "패스파인더 어드벤처 카드 게임: 룬로드의 부상 ?? 기본 세트": 133038, # 원문 '??' 그대로 사용
        "스시 고!": 133473,
        "유포리아: 더 나은 디스토피아 건설": 133848,
        "스매시 업: 어썸 레벨 9000": 134726,
        "가짜 예술가 뉴욕에 가다": 135779,
        "금지된 사막": 136063,
        "브뤼헤": 136888,
        "스파이리움": 137269,
        "아메리고": 137408,
        "파이어플라이: 게임": 138161,
        "크툴루 워즈": 139976,
        "프란시스 드레이크": 140603,
        "루이스 & 클라크: 탐험": 140620,
        "아보레텀": 140934,
        "페이퍼백": 141572,
        "탈출 계획": 142379,
        "석탄 남작": 143515,
        "퀀텀": 143519,
        "글래스 로드": 143693,
        "뱅! 주사위 게임": 143741,
        "로코코": 144344,
        "브뤼셀 1893": 144592,
        "러시안 레일로드": 144733,
        "아르헨트: 컨소시엄": 144797,
        "스코빌": 145659,
        "엘드리치 호러": 146021,
        "타슈-칼라르: 전설의 투기장": 146278,
        "배틀로어: 2판": 146439,
        "T.I.M.E 스토리": 146508,
        "레전더리 인카운터: 에일리언 덱 빌딩 게임": 146652,
        "라 그랑하": 146886,
        "스타 렐름": 147020,
        "컨셉": 147151,
        "원 나잇 얼티밋 웨어울프": 147949,
        "스플렌더": 148228,
        "이스탄불": 148949,
        "스컬 킹": 150145,
        "데드 오브 윈터: 크로스로드 게임": 150376,
        "고양이 탑": 150485,
        "팬데믹: 치료제": 150658,
        "야구 하이라이트: 2045": 151022,
        "밀레니엄 블레이드": 151347,
        "카멜 업": 153938,
        "임페리얼 세틀러": 154203,
        "아크로티리": 154458,
        "니폰": 154809,
        "아카디아 퀘스트": 155068,
        "캐쉬 앤 건즈: 2판": 155362,
        "미친 왕 루트비히의 성": 155426,
        "스펙터 옵스": 155624,
        "진화": 155703,
        "이니쉬": 155821,
        "어비스": 155987,
        "포트 로열": 156009,
        "디셉션: 홍콩 살인사건": 156129,
        "오니림 (2판)": 156336,
        "모니커즈": 156546,
        "시디트의 군주": 156566,
        "블랙 오케스트라": 156858,
        "파이브 트라이브스: 나칼라의 정령": 157354,
        "노팅엄의 보안관": 157969,
        "하나미코지": 158600,
        "콜트 익스프레스": 158899,
        "아쿠아스피어": 159508,
        "아를의 들판": 159675,
        "오니타마": 160477,
        "뉴욕의 왕": 160499,
        "레드7": 161417,
        "리스보아": 161533,
        "스톡파일": 161614,
        "팬데믹 레거시: 시즌 1": 161936,
        "연금술사": 161970,
        "스팀펑크 랠리": 162007,
        "데우스": 162082,
        "정령섬": 162886,
        "트리커리온: 환상의 전설": 163068,
        "원 나잇 얼티밋 웨어울프: 데이브레이크": 163166,
        "패치워크": 163412,
        "엑스컴: 보드게임": 163602,
        "타이니 에픽 갤럭시": 163967,
        "엘리시움": 163968,
        "스타워즈: 임페리얼 어썰트": 164153,
        "오를레앙": 164928,
        "클라스크": 165722,
        "스파이폴": 166384,
        "산 후안 (2판)": 166669,
        "네메시스": 167355,
        "애쉬즈 리본: 피닉스본의 부상": 167400,
        "테라포밍 마스": 167791,
        "두 도시 사이에서": 168435,
        "러브레터: 배트맨": 168584,
        "롤 플레이어": 169426,
        "심해 탐험": 169654,
        "사이드": 169786,
        "북해의 침략자": 170042,
        "블러드 레이지": 170216,
        "광대한: 크리스탈 동굴": 170416,
        "발레리아: 카드 왕국": 170561,
        "십자군: 뜻대로 하소서": 170624,
        "캡틴 소나": 171131,
        "퓨즈": 171273,
        "카카오": 171499,
        "마르코 폴로": 171623,
        "그리즐드": 171668,
        "벌글 브라더스": 172081,
        "익스플로딩 키튼": 172225,
        "미드가르드의 챔피언": 172287,
        "빗자루 서비스": 172308,
        "몸바사": 172386,
        "어보브 앤 빌로우": 172818,
        "7 원더스 듀얼": 173346,
        "글룸헤이븐: 밴퀴시": 174430,
        "셀레스티아": 175117,
        "포비든 스타즈": 175155,
        "비뉴스: 디럭스 에디션": 175640,
        "푸드 체인 매그네이트": 175914,
        "데일 오브 머천트": 176165,
        "좀비사이드: 블랙 플레이그": 176189,
        "쿼드라폴리스": 176396,
        "아일 오브 스카이: 족장에서 왕으로": 176494,
        "마피아 드 쿠바": 176558,
        "맨해튼 프로젝트: 에너지 엠파이어": 176734,
        "미션: 레드 플래닛 (2판/3판)": 176920,
        "IKI (이키)": 177478,
        "13일: 쿠바 미사일 위기, 1962년": 177590,
        "랩터": 177639,
        "오딘을 위하여": 177736,
        "코드네임": 178900,
        "언페어": 179172,
        "원 덱 던전": 179275,
        "제7대륙": 180263,
        "셰익스피어": 180511,
        "피의 여관": 180593,
        "포션 폭발": 180974,
        "드라큘라의 분노 (3판/4판)": 181279,
        "미스테리움": 181304,
        "룬바운드 (3판)": 181530,
        "행복 추구": 181687,
        "쓰루 디 에이지스: 문명에 관한 새로운 이야기": 182028,
        "에볼루션: 기후": 182134,
        "스타 렐름: 콜로니 워": 182631,
        "그랜드 오스트리아 호텔": 182874,
        "카루바": 183251,
        "비티컬쳐 에센셜 에디션": 183394,
        "오 마이 굿즈!": 183840,
        "온 마스": 184267,
        "버니 킹덤": 184921,
        "어나크로니": 185343,
        "니모의 전쟁 (2판)": 187617,
        "스타워즈 : 리벨리온": 187645,
        "시크릿 히틀러": 188834,
        "수상한 손님들: 월튼 사건": 188866,
        "디스 워 오브 마인: 더 보드 게임": 188920,
        "언더다크의 폭군": 189932,
        "아웃리브": 191051,
        "에온스 엔드": 191189,
        "임호텝": 191862,
        "투 매니 본즈": 192135,
        "크툴루의 지배": 192153,
        "스시 고 파티!": 192291,
        "크라이 해벅": 192457,
        "51번째 주: 마스터 세트": 192458,
        "식민지 개척자": 192836,
        "데드 오브 윈터: 더 롱 나이트": 193037,
        "정크 아트": 193042,
        "델파이의 신탁": 193558,
        "그레이트 웨스턴 트레일": 193738,
        "주사위 대장간": 194594,
        "미스틱 베일": 194607,
        "해피 샐몬": 194626,
        "산토리니": 194655,
        "혼자가 아니야": 194879,
        "니어 앤 파": 195421,
        "대부: 콜레오네 제국": 195539,
        "러브 레터: 프리미엄 에디션": 196326,
        "요코하마": 196340,
        "차터스톤": 197376,
        "도망자": 197443,
        "러브크래프트 레터": 198740,
        "코드네임: 픽처스": 198773,
        "이베리아": 198928,
        "히어로 렐름": 198994,
        "해리 포터: 호그와트 전투": 199042,
        "플람 루즈": 199478,
        "사그라다": 199561,
        "에버델": 199792,
        "가나가와": 200147,
        "아그리콜라 (개정판)": 200680,
        "클랭크!": 201808,
        "엑스 리브리스": 201825,
        "시데리얼 컨플루언스": 202426,
        "출구: 더 게임 - 파라오의 무덤": 203416,
        "엑시트: 더 게임 - 연구실의 비밀": 203417,
        "Exit: 더 게임 - 버려진 오두막": 203420,
        "로렌초 일 매니피코": 203993,
        "셜록 홈즈 컨설팅 디텍티브: 잭 더 리퍼 & 웨스트 엔드 어드벤처": 204305,
        "서브 테라": 204472,
        "킹도미노": 204583,
        "광기의 저택 (2판)": 205059,
        "스타워즈: 데스티니": 205359,
        "아컴 호러: 카드 게임": 205637,
        "떠오르는 태양": 205896,
        "인사이더": 206051,
        "에트노스": 206718,
        "일등석: 오리엔트 특급 열차에 탑승하세요!": 206941,
        "타임 밤": 207764,
        "메크 VS 미니언": 209010,
        "도미니언 (2판)": 209418,
        "센추리: 스파이스 로드": 209685,
        "매직 메이즈": 209778,
        "야마타이": 213893,
        "다운포스": 215311,
        "클랜 오브 칼레도니아": 216132,
        "잃어버린 탐험대": 216459,
        "판타스틱 팩토리": 216600,
        "다이스 쓰론: 시즌 1": 216734,
        "엘도라도를 찾아서": 217372,
        "다이스 하스피탈": 218121,
        "라이노 히어로: 슈퍼 배틀": 218333,
        "에온스 엔드: 워 이터널": 218417,
        "광합성": 218603,
        "웨어워즈": 219215,
        "베어렌파크": 219513,
        "가이아 프로젝트": 220308,
        "카베르나: 동굴 대 동굴": 220520,
        "라자 오브 더 갠지스": 220877,
        "팬데믹 레거시: 시즌 2": 221107,
        "다이노소어 아일랜드": 221194,
        "숲 속의 여우": 221965,
        "헬라스의 영주": 222509,
        "판타지 왕국": 223040,
        "디텍티브: 현대 범죄 보드 게임": 223321,
        "스타트업": 223770,
        "코드네임: 듀엣": 224037,
        "브라스: 버밍엄": 224517,
        "빈디케이션": 224783,
        "디크립토": 225694,
        "펭귄 트랩": 225981,
        "마이 리틀 사이드": 226320,
        "EXIT: 더 게임 - 오리엔트 특급 열차의 사망자": 226522,
        "붉은 성당": 227224,
        "헤븐 앤 에일": 227789,
        "원더랜드의 전쟁": 227935,
        "펄사 2849": 228341,
        "산타마리아": 229220,
        "테오티우아칸: 신들의 도시": 229853,
        "블랙 엔젤": 230244,
        "아줄": 230802,
        "오즈트랄리아": 231581,
        "업세션": 231733,
        "퀸도미노": 232043,
        "드래곤 캐슬": 232219,
        "웨스턴 레전드": 232405,
        "오션스": 232414,
        "센추리: 골렘 에디션": 232832,
        "여명의 제국 (제4판)": 233078,
        "문명: 새로운 새벽": 233247,
        "봉제 인형 이야기": 233312,
        "클랭크! 인! 스페이스!: 덱 빌딩 어드벤처": 233371,
        "엔데버: 세일의 시대": 233398,
        "웰컴 투...": 233867,
        "누스피오르드": 234277,
        "알티플라노": 234487,
        "이스탄불: 주사위 게임": 235488,
        "런던 (2판)": 236191,
        "서부 왕국의 건축가들": 236457,
        "루트": 237182,
        "크라임 연대기": 239188,
        "팜 아일랜드": 239464,
        "블러드 온 더 클락타워": 240980,
        "에이언즈 엔드: 레거시": 241451,
        "빌리저스": 241724,
        "스페이스 베이스": 242302,
        "센추리: 이스턴 원더스": 242574,
        "트레저 아일랜드": 242639,
        "샤드 오브 인피니티": 244115,
        "리프": 244228,
        "블루 라군": 244331,
        "크베들린부르크의 돌팔이 약장수": 244521,
        "정말 영리하네!": 244522,
        "뉴턴": 244711,
        "코임브라": 245638,
        "룩소르": 245643,
        "레일로드 잉크: 딥 블루 에디션": 245654,
        "더 킹스 딜레마": 245655,
        "카르페 디엠": 245934,
        "기즈모": 246192,
        "스마트폰 Inc.": 246684,
        "크립티드": 246784,
        "이클립스: 두 번째 여명": 246900,
        "에어, 랜드 앤 씨": 247367,
        "언더워터 시티즈": 247763,
        "아틀란티스 라이징 (2판)": 248490,
        "전쟁 상자": 249259,
        "구궁": 250458,
        "버라지": 251247,
        "스프로울폴리스": 251658,
        "레일로드 잉크: 블레이징 레드 에디션": 251678,
        "크툴루: 죽음마저 죽으리니": 253344,
        "너구리 거물": 254386,
        "저스트 원": 254640,
        "슬리핑 갓즈": 255984,
        "아줄: 신트라의 스테인드 글라스": 256226,
        "디즈니 빌러너스: 최악의 자가 전부를 가져간다": 256382,
        "파이프라인": 256730,
        "콩코르디아 비너스": 256916,
        "좀비 키즈 에볼루션": 256952,
        "팍스 파미르: 2판": 256960,
        "아컴 호러 (3판)": 257499,
        "키포지: 아콘의 부름": 257501,
        "미친 루트비히 왕의 두 성 사이에서": 258036,
        "블리츠크리그!: 20분 안에 즐기는 제2차 세계 대전": 258210,
        "플래닛 언노운": 258779,
        "프로젝트 L": 260180,
        "로마의 멸망": 260428,
        "카멜 업 (2판)": 260605,
        "블랙아웃: 홍콩": 262215,
        "웨이브렝스": 262543,
        "레스 아르카나": 262712,
        "지도 제작자들": 263918,
        "드래프토사우루스": 264055,
        "테인티드 그레일: 아발론의 몰락": 264220,
        "만달라": 264241,
        "글렌 모어 II: 크로니클": 265188,
        "산왕의 전당에서": 265402,
        "타이니 타운": 265736,
        "윙스팬": 266192,
        "클랭크! 레거시: 기업 인수": 266507,
        "파크": 266524,
        "서쪽 왕국의 성기사": 266810,
        "QE": 266830,
        "언다운데드: 노르망디": 268864,
        "하다라": 269144,
        "티펜탈의 선술집": 269207,
        "두 배로 영리하게!": 269210,
        "반지의 제왕: 중간계로의 여정": 269385,
        "쿠퍼 아일랜드": 269511,
        "실버 앤 골드": 270673,
        "임페리얼 세틀러: 북부 제국": 270844,
        "센추리: 새로운 세계": 270970,
        "엘더베일의 거주지": 271055,
        "이츠 어 원더풀 월드": 271324,
        "스타워즈: 아우터 림": 271896,
        "워터게이트": 274364,
        "언매치드: 배틀 오브 레전드, 볼륨 원": 274637,
        "포인트 샐러드": 274960,
        "레터 잼": 275467,
        "마라카이보": 276025,
        "파리: 빛의 도시": 276498,
        "러브 레터": 277085,
        "파이널 걸": 277659,
        "행성 X를 찾아서": 279537,
        "고양이 섬": 281259,
        "호러파이드": 282524,
        "캘리코": 283155,
        "듄": 283355,
        "아쿠아티카": 283393,
        "투카나의 트레일": 283864,
        "마르코 폴로 II: 칸의 심복": 283948,
        "스페이스 크루": 284083,
        "칸반 EV": 284378,
        "노바 루나": 284435,
        "마인드 MGMT: 초능력 스파이 활동 게임": 284653, # "게임" 중복 수정
        "허니 버즈": 284742,
        "데스티니스": 285192,
        "마블 챔피언스: 더 카드 게임": 285774,
        "앙크: 이집트 신들": 285967,
        "태피스트리": 286096,
        "아줄: 여름 정원": 287954,
        "캔버스": 290236,
        "스카우트": 291453,
        "글룸헤이븐: 사자의 턱": 291457,
        "맹세": 291572,
        "니다벨리르": 293014,
        "언매치드: 코블 & 포그": 294484,
        "롱 샷: 더 다이스 게임": 295374,
        "마이 시티": 295486,
        "프로스트헤이븐": 295770,
        "디스틸드": 295895,
        "캐스캐디아": 295947,
        "웨스트 킹덤의 자작": 296151,
        "요새": 296912,
        "테케누: 태양의 오벨리스크": 297030,
        "지킬 대 하이드": 297129,
        "케메트: 피와 모래": 297562,
        "마블 유나이티드": 298047,
        "큐비토스": 298069,
        "스파이시": 299169,
        "할러타우": 300322,
        "팔레오": 300531,
        "뉴욕 동물원": 300877,
        "레이더스 오브 스키티아": 301880,
        "잊혀진 바다": 302723,
        "팬암": 303057,
        "크리처 컴포트": 304051,
        "봉화 (Bonfire)": 304420,
        "하드리아누스의 장벽": 304783,
        "엔드리스 윈터: 팔레오아메리칸": 305096,
        "메르브: 실크로드의 심장": 306040,
        "언더 폴링 스카이": 306735,
        "레기사이드": 307002,
        "프라가 카푸트 레그니": 308765,
        "네메시스: 락다운": 310100,
        "카네기": 310873,
        "아노 1800: 보드 게임": 311193,
        "아르낙의 잊혀진 유적": 312484,
        "팬데믹 레거시: 시즌 0": 314040,
        "메도우": 314491,
        "코덱스 나투랄리스": 314503,
        "7 원더스 (2판)": 316377,
        "듄: 임페리움": 316554,
        "태양 너머": 317985,
        "용광로 (Furnace)": 318084,
        "임페리움: 클래식": 318184,
        "마이크로매크로: 크라임 시티": 318977,
        "더 킹 이즈 데드: 세컨드 에디션": 319966,
        "헤게모니: 당신의 사회 계층을 승리로 이끄세요": 321608,
        "다윈의 여정": 322289,
        "비토쿠": 323612,
        "딥 씨 크루: 심해에서의 임무": 324856,
        "살아있는 숲": 328479,
        "케이퍼: 유럽": 328565,
        "테라포밍 마스: 아레스 원정": 328871,
        "래드랜드": 329082,
        "레드 라이징": 329465,
        "쏘 클로버!": 329839,
        "더 위쳐: 올드 월드": 331106,
        "리바이브": 332772,
        "베르당": 334065,
        "갤럭시 트러커 (2판)": 336794,
        "플레임크래프트": 336986,
        "웰컴 투 더 문": 339789,
        "언페더머블": 340466,
        "그레이트 웨스턴 트레일 (2판)": 341169,
        "아크 노바": 342942,
        "분레이크": 343905,
        "마인드버그: 퍼스트 컨택트": 345584,
        "캣 인 더 박스: 디럭스 에디션": 345972,
        "밀레 피오리": 346501,
        "7 원더스: 건축가": 346703,
        "아줄: 여왕의 정원": 346965,
        "어스": 350184,
        "웨이페어러스 오브 더 사우스 티그리스": 350316,
        "상인 탐험가 길드": 350933,
        "레디 셋 벳": 351040,
        "틸레툼": 351913,
        "트리오": 352515,
        "트레킹 스루 히스토리": 353288,
        "넥스트 스테이션: 런던": 353545,
        "우드크래프트": 355093,
        "리버탈리아: 게일크레스트의 바람": 356033,
        "튜링 머신": 356123,
        "아크로폴리스": 357563,
        "아크": 359871,
        "챌린저스!": 359970,
        "스플렌더 듀얼": 364073,
        "세계 불가사의": 365258,
        "클랭크!: 카타콤": 365717,
        "히트: 질주의 열기": 366013,
        "윙스팬 아시아": 366161,
        "씨 솔트 & 페이퍼": 367220,
        "맥주와 빵": 369880,
        "도로프롬안틱: 더 보드 게임": 370591,
        "백로성": 371942,
        "스카이 팀": 373106,
        "스타워즈: 더 덱빌딩 게임": 374173,
        "익스페디션": 379078,
        "크나르": 379629,
        "그레이트 웨스턴 트레일: 뉴질랜드": 380607,
        "혁신의 시대": 383179,
        "이터니티의 계곡": 385529,
        "파라웨이": 385761,
        "포레스트 셔플": 391163,
        "뉴클리엄": 396790,
        "듄: 임페리움 - 봉기": 397598,
        "에이피어리": 400314,
        "웜스팬": 410201,
        "하모니즈": 414317,
        "반지의 제왕: 중간계 결투": 421006
    }
    
    def __new__(cls, *args, **kwargs):
        """싱글톤 패턴 구현 - 모든 인터페이스에서 동일한 서비스 인스턴스 사용"""
        if cls._instance is None:
            logger.info("ChatService 싱글톤 인스턴스 생성 중...")
            cls._instance = super(ChatService, cls).__new__(cls)
            cls._instance.initialized = False
        return cls._instance
    
    def __init__(self):
        """서비스 초기화 (한 번만 실행)"""
        if self.initialized:
            return
            
        logger.info("ChatService 초기화 중...")
        try:
            # KBLaM 초기화 - top_k 값을 늘려 더 많은 결과 검색
            logger.info("KBLaM 초기화 시작")
            self.kblam = SimplifiedKBLaM(top_k=10)
            logger.info("KBLaM 초기화 완료")
            
            # LLM 클라이언트 초기화
            logger.info("LLM 클라이언트 초기화 시작")
            self.llm_client = LLMClient()
            logger.info("LLM 클라이언트 초기화 완료")
            
            self.initialized = True
            logger.info("ChatService 초기화 완료")
        except Exception as e:
            logger.error(f"ChatService 초기화 중 오류 발생: {str(e)}", exc_info=True)
            raise
    
    async def check_game_related(self, query: str) -> bool:
        """질문이 보드게임 관련인지 확인"""
        return is_game_related_query(query)
    
    async def retrieve_knowledge(self, query: str, chat_type: str = "general") -> Tuple[List[KnowledgeTriple], Dict[str, Dict[str, Any]]]:
        """벡터 스토어에서 관련 지식 검색 - Chainlit 방식과 일치"""
        try:
            logger.info(f"벡터 검색 시작: '{query}' (모드: {chat_type})")
            
            # 게임 이름 강조를 위한 전처리
            enhanced_query = self._enhance_query(query, chat_type)
            logger.debug(f"향상된 쿼리: '{enhanced_query}'")
            
            relevant_triples = self.kblam.retrieve_relevant_triples(enhanced_query)
            logger.info(f"벡터 검색 완료: {len(relevant_triples)}개 트리플 발견")
            
            # 검색 결과 필터링 및 정렬
            filtered_triples = self._filter_triples(relevant_triples, query, chat_type)
            logger.info(f"필터링 후 트리플: {len(filtered_triples)}개")
            
            # 트리플에서 게임 정보 추출 (Chainlit 코드와 동일하게)
            games = {}
            for triple in filtered_triples:
                entity = triple.entity
                if entity not in games:
                    games[entity] = {"name": entity}
                
                games[entity][triple.attribute] = triple.value
            
            logger.debug(f"추출된 게임 정보: {list(games.keys())}")
            return filtered_triples, games
            
        except Exception as e:
            logger.error(f"벡터 검색 중 오류 발생: {str(e)}", exc_info=True)
            return [], {}
    
    def _enhance_query(self, query: str, chat_type: str) -> str:
        """쿼리 강화 - 특정 게임 이름이나 의도 강조"""
        # 게임 이름 리스트 (자주 언급되는 게임들)
        popular_games = ["카탄", "catan", "뱅", "bang", "클루", "clue", "티켓 투 라이드", "ticket to ride",
                        "스플렌더", "splendor", "세븐 원더스", "7 wonders", "팬데믹", "pandemic"]
        
        enhanced_query = query
        
        # 비교 모드인 경우 특별 처리
        if chat_type == "comparison":
            mentioned_games = []
            for game in popular_games:
                if game.lower() in query.lower():
                    mentioned_games.append(game)
            
            if len(mentioned_games) >= 2:
                games_str = " 및 ".join(mentioned_games)
                enhanced_query = f"보드게임 {games_str} 비교: {query}"
        
        # 추천 모드인 경우 특별 처리
        elif chat_type == "recommendation":
            enhanced_query = f"보드게임 추천: {query}"
            
            # 비슷한 게임 찾기 의도가 있는 경우
            for game in popular_games:
                if game.lower() in query.lower() and ("비슷" in query or "같은" in query):
                    enhanced_query = f"보드게임 {game}와 비슷한 게임 추천: {query}"
                    break
        
        return enhanced_query
    
    def _filter_triples(self, triples: List[KnowledgeTriple], query: str, chat_type: str) -> List[KnowledgeTriple]:
        """검색된 트리플 필터링 및 정렬"""
        if not triples:
            return []
        
        # 쿼리에서 게임 이름 추출 (간단 구현)
        game_names = []
        query_lower = query.lower()
        popular_games = ["카탄", "catan", "뱅", "bang", "클루", "clue", "티켓 투 라이드", "ticket to ride",
                        "스플렌더", "splendor", "세븐 원더스", "7 wonders", "팬데믹", "pandemic"]
        
        for game in popular_games:
            if game.lower() in query_lower:
                game_names.append(game.lower())
        
        # 게임 이름이 언급된 경우, 해당 게임 관련 트리플 우선 배치
        if game_names:
            # 언급된 게임 관련 트리플 먼저, 나머지는 그 다음
            prioritized = []
            others = []
            
            for triple in triples:
                entity_lower = triple.entity.lower()
                if any(game_name in entity_lower for game_name in game_names):
                    prioritized.append(triple)
                else:
                    others.append(triple)
            
            return prioritized + others
        
        # 언급된 게임이 없는 경우 그대로 반환
        return triples    
    async def handle_chat(self, query: str, user_id: Optional[int] = None) -> Dict[str, Any]:
        """
        사용자의 채팅 메시지 처리
        
        매개변수:
            query: 사용자의 질문
            user_id: 사용자 ID (개인화 기능을 위해 사용)
        
        반환:
            텍스트와 추가 데이터가 포함된 응답 객체
        """
        # 게임 관련 질문인지 확인
        is_game_query = await self.check_game_related(query)
        logger.info(f"게임 관련 질문 여부: {is_game_query}")
        
        # 기본 chat_type은 general로 설정
        chat_type = "general"
        
        # 추천 패턴 확인 (예: "추천", "recommend" 등을 포함)
        if "추천" in query or "recommend" in query.lower():
            chat_type = "recommend"
        # 비교 패턴 확인 (예: "비교", "차이", "어떤 게임이 더" 등을 포함)
        elif any(term in query for term in ["비교", "차이", "더 나은", "vs", "대"]):
            chat_type = "comparison"
        
        logger.info(f"결정된 채팅 타입: {chat_type}")
        
        # 비게임 질문은 빠르게 처리 (일반 모드에서만)
        if not is_game_query:
            logger.info("일반 대화로 분류됨 - 벡터 검색 없이 진행")
            basic_prompt = get_q_system_prompt() + "\n일반 대화에는 Q 캐릭터로 간략히 응답해주되, 가능하면 대화를 보드게임 질문으로 유도해주세요."
            try:
                response_text = self.llm_client.generate(
                    system_prompt=basic_prompt,
                    user_prompt=f"User Question: {query}"
                )
                return {
                    "chat_type": "general",
                    "message": response_text,
                    "is_game_query": False
                }
            except Exception as e:
                logger.error(f"LLM 응답 생성 중 오류 발생: {str(e)}", exc_info=True)
                return {
                    "chat_type": "general",
                    "message": "응답 생성 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.",
                    "is_game_query": False,
                    "error": str(e)
                }
        
        # 채팅 유형에 따라 적절한 프롬프트 선택
        if chat_type == "recommend":
            system_prompt = get_recommendation_prompt()
            logger.debug("추천 모드 프롬프트 선택됨")
        elif chat_type == "comparison":
            system_prompt = get_comparison_prompt()
            logger.debug("비교 모드 프롬프트 선택됨")
        else:
            system_prompt = get_q_system_prompt()
            logger.debug("일반 모드 프롬프트 선택됨")
        
        # 벡터 검색으로 지식 검색
        relevant_triples, games = await self.retrieve_knowledge(query, chat_type)
        
        if not relevant_triples:
            logger.warning("관련 게임 정보를 찾지 못함")
            if is_game_query:
                return {
                    "chat_type": chat_type,
                    "message": "죄송합니다만, 그 질문에 대한 관련 게임 정보를 데이터베이스에서 찾지 못했습니다. 다른 키워드나 게임을 물어보시겠어요?",
                    "is_game_query": True
                }
            else:
                return {
                    "chat_type": "general",
                    "message": "음, 보드게임과 관련 없는 질문인 것 같군요. 이 서비스는 보드게임 정보 전용입니다. 어떤 게임에 관심이 있으신가요?",
                    "is_game_query": False
                }
        
        # LLM 응답 생성
        try:
            logger.info("LLM 응답 생성 시작")
            response_text = self.kblam.predict(
                query=query, 
                llm_client=self.llm_client, 
                system_prompt=system_prompt,
                pre_retrieved_triples=relevant_triples  # 트리플 재사용
            )
            logger.info(f"LLM 응답 생성 완료: {len(response_text)}자")
            
            # 추천 모드인 경우 썸네일과 게임 ID 추가
            thumbnail = None
            gameId = None
            if chat_type == "recommend" and games:
                # 첫 번째 게임에 대한 정보 사용
                first_game = list(games.values())[0]
                game_name = first_game.get("name")
                
                # 게임 ID 찾기
                # 1. 메타데이터에서 직접 ID를 찾는 경우
                if "game_id" in first_game:
                    gameId = first_game.get("game_id")
                # 2. 게임 이름으로 ID 매핑을 찾는 경우
                elif game_name in self.GAME_NAME_TO_ID:
                    gameId = self.GAME_NAME_TO_ID.get(game_name)
                # 3. 기본값: 목록에서 임의의 ID 선택
                else:
                    import random
                    gameId = random.choice(self.GAME_IDS)
                
                # 썸네일 URL 생성 (실제로는 DB에서 가져와야 함)
                thumbnail = f"https://example.com/images/{game_name.lower().replace(' ', '_')}.jpg"
            
            return {
                "chat_type": chat_type,
                "message": response_text,
                "thumbnail": thumbnail,
                "gameId": gameId,
                "is_game_query": True
            }
            
        except Exception as e:
            logger.error(f"LLM 응답 생성 중 오류 발생: {str(e)}", exc_info=True)
            return {
                "chat_type": "general",
                "message": "응답 생성 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.",
                "is_game_query": True,
                "error": str(e)
            }
    
    # 기존 메서드들 유지
    async def get_user_chat_history(self, user_id: int) -> List[Dict[str, Any]]:
        """사용자의 채팅 기록 가져오기"""
        # 임시 응답 (실제로는 DB 연동 필요)
        return [
            {"id": 1, "message": "안녕하세요", "timestamp": "2023-04-06T10:00:00", "is_bot": False},
            {"id": 2, "message": "보드게임 추천해주세요", "timestamp": "2023-04-06T10:01:00", "is_bot": False},
            {"id": 3, "message": "어떤 종류의 게임을 선호하시나요?", "timestamp": "2023-04-06T10:01:05", "is_bot": True}
        ]
    
    async def get_personalized_recommendations(self, user_id: int) -> List[Dict[str, Any]]:
        """사용자에게 개인화된 게임 추천 목록 제공"""
        # 임시 응답 (실제로는 사용자 선호도 기반 로직 필요)
        return [
            {"id": 101, "name": f"사용자 {user_id}님을 위한 보드게임 1", "description": "전략 게임"},
            {"id": 102, "name": f"사용자 {user_id}님을 위한 보드게임 2", "description": "파티 게임"}
        ]
